services:
  db:
    image: postgres:15
    container_name: my-postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    # La commande vérifie si RUN_TESTS est à "true".
    # Si c'est le cas, elle exécute les migrations puis lance les tests.
    # Sinon, elle exécute les migrations, peuple la BDD puis lance le serveur.
    command: >
      sh -c "python laboratoire_bj/manage.py makemigrations &&
      python laboratoire_bj/manage.py migrate &&
      python laboratoire_bj/manage.py populer &&
      if [ \"$RUN_TESTS\" = \"true\" ]; then
         python laboratoire_bj/manage.py test application_multi_magasins;
      else
         python laboratoire_bj/manage.py runserver 0.0.0.0:5000;
      fi"
    container_name: lab0-container-bryanjoya
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    

volumes:
  pgdata: