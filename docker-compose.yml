services:
  db:
    image: postgres:15
    container_name: my-postgres-3
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5433:5432"
    volumes:
      - pgdata-3:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    # La commande vérifie si RUN_TESTS est à "true".
    # Si c'est le cas, elle exécute les migrations puis lance les tests.
    # Sinon, elle exécute les migrations, peuple la BDD puis lance le serveur.
    command: >
      sh -c "python laboratoire_bj/manage.py makemigrations &&
      python laboratoire_bj/manage.py migrate &&
      python laboratoire_bj/manage.py populer &&
      if [ \"$RUN_TESTS\" = \"true\" ]; then
         python laboratoire_bj/manage.py test application_multi_magasins;
      else
         python laboratoire_bj/manage.py runserver 0.0.0.0:8000;
      fi"
    container_name: lab3-container-bryanjoya
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "YourAdminPassword"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
  
  k6:
    image: loadimpact/k6:latest
    volumes:
      - ./k6:/scripts:ro
    environment:
      BASE_URL: "http://10.194.32.198:8000/api"
    entrypoint: ["k6", "run", "/scripts/load-test.js"]


volumes:
  pgdata-3:
  grafana-data:
